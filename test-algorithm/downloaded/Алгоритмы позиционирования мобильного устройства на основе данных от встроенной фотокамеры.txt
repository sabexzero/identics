Введение В работе идет речь о возможности создания программного продукта для позиционирования мобильного устройства (смартфон или КПК) в пространстве относительно окружающих объектов на основе данных, полученных от установленной на нем фотокамеры. На данный момент аналогич% ные приложения существуют. Но они или разрабо% таны для более мощных устройств, нежели мобиль% ный телефон или КПК, или устройство обладает датчиками, способными решать данную проблему на основе других физических принципов. Данная работа рассматривает алгоритмы, позволяющие создать приложения, которые могли бы работать на большинстве мобильных устройств вне зависимо% сти от их производителя. Хотя можно отметить, что цели такой разработки не совсем ясные, и это, в значительной мере, является экспериментом. Поставленную задачу предлагается решать сле% дующим образом. Найдя особые точки на первом изображении, необходимо отыскать их на втором. Здесь потребуются алгоритмы слежения за особен% ностями (опорными точками). Для решения задачи используем минимум четыре точки на одном изо% бражении и соответствующие четыре точки на вто% ром. Так как опорные точки на получаемых изобра% жениях имеют две координаты, а соответствующая точка пространства – три координаты, то необхо% димо знать правила, по которым происходит дан% ное преобразование. Эти правила зависят от вну% тренних параметров фотокамеры. Их определение осуществляется посредством калибровки камеры. Определение того, изменилось ли положение в пространстве или нет, производится путем поиска неизвестных коэффициентов в матрице вращения и векторе сдвига. 1. Процесс калибровки камеры камеры и точка M=(X, Y, Z) в пространстве связан% ны следующим равенством: где M=(X, Y, Z)T – трехмерный вектор, соответ% ствующий точке M, m=(x,y)T – двумерный вектор, соответствующий точке m, v=(u v 1)T – вектор одно% родных [1] внутренних координат камеры, а матри% ца – матрица, известная под названием матрицы внутренних параметров ка% меры, поскольку она содержит только параметры оптической системы и фотоприемника камеры. Пусть задана точка m=(x,y) на плоскости, кото% рая является проекцией некоторой точки M=(X,Y,Z) в пространстве. Соотношение между эт% ими двумя точками можно представить в следую% щем виде: где s – некоторый скаляр, пара (R t) – так называ% емые внешние параметры камеры, A – матрица, представляющая собой внутренние параметры ка% меры. Получим новое соотношение из (2), исполь% зовав матрицу гомографии H=A[r1 r2 t]: sm=HM. Матрицу гомографии можно вычислить различны% ми способами [2], будем считать, что она уже есть. Положим, что H=[h1 h2 h3], тогда из (2) получим: где  – скаляр. Исходя из того, что r1 и r2 ортого% нальны, получаем A r f / w f / h  

Управление, вычислительная техника и информатика УДК 535.31 АЛГОРИТМЫ ПОЗИЦИОНИРОВАНИЯ МОБИЛЬНОГО УСТРОЙСТВА НА ОСНОВЕ ДАННЫХ ОТ ВСТРОЕННОЙ ФОТОКАМЕРЫ А.В. Козырева Институт систем информатики им. А.П. Ершова СО РАН, г. Новосибирск Изучена возможность создания программного продукта для позиционирования мобильного устройства в пространстве относи' тельно окружающих объектов. Рассмотрены алгоритмы калибровки камеры, а также алгоритмы нахождения особенностей изо' бражения и их дальнейшего отслеживания. Определение того, изменилось ли положение в пространстве или нет, производит' ся путем поиска неизвестных коэффициентов в матрице вращения и векторе сдвига на основе полученных калибровочных дан' ных и найденных особенностей. На основе результатов работы разных алгоритмов создана упрощенная техника для решения конкретных задач. Результаты ее работы показали неплохие результаты. Данные сочетания техник могут быть использованы для управления мобильными устройствами или в играх. Ключевые слова: Калибровка камеры, особенности изображения, угловые детекторы, алгоритмы слежения за особенностями.

Положим тогда (3) и (4) можно переписать в следующем виде: В (5) b– это 6D вектор, равный [B11,B12,B22,B13,B23,B33], где Bij – элементы матрицы B=A–TA–1. Тогда, используя n изображений шаблона, пу% тем несложных преобразований [3] элементы ма% трицы внутренних параметров можно записать следующим образом: где Bij – элементы матрицы B=A–TA–1. Калибровку стационарной камеры можно про% вести также следующим образом [8]. Пусть даны перекрывающие друг друга изображения J0...JN, где N2. Изображения получены при помощи одной камеры и регистрируют одну и ту же сцену. Тогда алгоритм самокалибровки следующий: • установить соответствие между точками изо% бражений; • для каждого j=1...N вычислить преобразование Pj между J0 и Ji; • найти верхнетреугольную матрицу K, такую что K–1PjK=Rj, где Rj – это матрица вращения для всех j>0 (K – калибровочная матрица, Rj описы% вает ориентацию камеры в момент j по отноше% нию к «нулевому» моменту); • итеративно улучшить полученную оценочную калибровочную матрицу. 2. Вращение и сдвиг Рассмотрим общий случай, когда оптические оси камер не параллельны, а направление смеще% ния оптического центра одной камеры относитель% но оптического центра другой произвольно ную систему координат. Пусть первой камере соот% ветствует система координат O'X'Y'Z', а второй – рактеризует координаты некоторой точки M трех% мерного пространства в системе первой камеры, а вектор M"=(O"X"Y"Z")T – в системе второй. Легко показать, что связь между векторами M' и M" зада% ется соотношением где R=R"R'T – ортогональная матрица, описываю% щая ориентацию системы координат второй каме% ры относительно первой, а t=–R"R'Tt'+t" – вектор трансляции, определяющий положение оптиче% ского центра второй камеры в системе координат первой. Рассмотрим пару камер, внутренние параметры которых известны, но неизвестны внешние пара% метры (матрица R и вектор t). Умножив обе части выражения (6) слева векторно на t, а затем скаляр% но – на M", получим M``T(tRM')=0. Это соотноше% ние формально выражает тот факт, что векторы M', M" и t лежат в одной плоскости, проходящей через три точки: оптические центры камер O' и O" и точ% ку наблюдения M. Выражая M через v и учитывая свойства смешанного произведения векторов, по% лучим: B B B B B B B B B B cv

 

 

ij h h h h h h h h h h h h h h h h h h  

h A A h h A A h h A A h Известия Томского политехнического университета. 2010. Т. 316. № 5 Система координат проективной камеры

Соотношение (7) является основой для оценки матрицы R и вектора t. Предположим, что известны координаты n пар сопряженных точек и, соответ% ственно, n пар векторов vi' и vi", i=1, 2... n. Рассмотрим метод оценивания R и t, исполь% зующий (7). Так как это соотношение справедливо для любой пары сопряженных точек, имеем систе% му из n уравнений относительно неизвестных R и t, которую можно представить в виде: Система (8) является однородной линейной по t. Это означает, что вектор трасляции можно оценить только с точностью до постоянного множителя. Вводя условие нормировки ||t||2=1, количество воз% можных решений можно ограничить двумя, отли% чающимися знаком. Система (8) содержит пять не% известных, следовательно, и число пар известных сопряженных точек n должно быть не менее пяти. Поскольку на практике в матрицу Bn входят не точные значения координат сопряженных точек, а результаты их измерений, которые могут содержать ошибки, то реально система (8) имеет ненулевую правую часть, т. е. Bnt=e, где e – вектор невязки, об% условленный наличием ошибок измерений. Согласно МНК в качестве оценок матрицы вра% щения и вектора трансляции следует выбрать такие R и t, которые минимизируют значения функцио% нала J2(R,t)=eTe=tTBn TBnt. Как упоминалось ранее, при условии ||t||2=1 квадратичная форма tTBn TBnt до% стигает минимума J2=min по t (min – минимальное собственное число матрицы Bn TBn), если t – соб% ственный вектор матрицы, соответствующий min. Поэтому процедуру оценивания R и t можно раз% бить на два этапа. На первом – находится матрица R, минимизирующая min. На втором – оценивается собственный вектор матрицы Bn TBn, соответствую% щий min. Существует множество алгоритмов и их программных реализаций для вычисления соб% ственных векторов, поэтому второй этап не вызы% вает трудностей. Значительно более сложной задачей является задача оценивания матрицы R. Один из возможных алгоритмов состоит в следующем. Известно, что матрица R может быть представлена в виде cos sin sin cos cos sin sin cos cos sin sin cos

 

 

... RA v B t RA v 

  

RA v 

Управление, вычислительная техника и информатика Система двух произвольно ориентированных камер

Углы x, y и z – три неизвестных параметра, от которых зависит матрица R. На практике всегда известен диапазон, в котором они могут лежать. Выполняя в этом диапазоне полный перебор по всем углам с достаточно грубым шагом (например, 1°), можно приблизиться к значениям, удовлетво% ряющим требованиям минимизации функционала J2 по R. Затем в окрестности этих значений для уточнения положения минимума можно восполь% зоваться одним из известных методов минимиза% ции (например, наискорейшего спуска, Ньютона, Маркуардта). 3. Опорные точки изображения Введем понятие точечной особенности x' изо% бражения, как точки, чья окрестность отличается от окрестностей близлежащих точек по выбранной мере, т. е. {x:|x'–x|<r(x, x')>}, где x – окрестность точки x, называемая окном поиска, а (x, x') – функция близости окрестностей по не% которой мере. Большинство детекторов точечных особенно% стей работают сходным образом: для каждой точки изображения вычисляется некоторая функция от ее окрестности. Точки, в которых эта функция до% стигает локального максимума, очевидно можно отличить от всех точек из некоторой ее окрестно% сти. Существует целый набор функций, которые можно использовать для обнаружения точечных особенностей. Чаще всего для задач отслеживания точек сцены применяются функции, находящие в изображении структуры, похожие на угол – уголки (corners). Детекторы, использующие такие функ% ции, называются детекторами углов. Именно они чаще всего применяются для решения задач отсле% живания точечных особенностей сцены. 3.1. Алгоритм Харриса и Стефенса/Плесси Угловой детектор Харриса основывается на ме% стной функции сигнала. Пусть у нас есть точка (x,y) и некоторое смещение (x,y), тогда функцию сиг% нала можно записать следующим образом: где I является функцией изображения, а (xi,yi) – точка в окне W с центром в точке (x,y). Разложив функцию I по Тейлору и подставив в (9), получим: где C(x,y) фиксирует яркость в локальной окрестности. Пусть 1, 2 являются собственными значения% ми матрицы C(x,y). Возможны три варианта. 1. Если оба значения 1 и 2 близки к 0, то это оз% начает, что функция яркости в окрестности дан% ной точки меняется незначительно, а значит, она не может быть точкой особенности. 2. Если одно собственное значение матрицы боль% шое, а другое близко к нулю, то локальная функция яркости меняется в одном направле% нии; это «ребро». 3. Если оба значения высоки, то даже небольшое смещение точки (x, y) в сторону вызывает зна% чительные изменения в яркости, что может быть особенностью изображения; это «угол». Точки изображения, соответствующие локаль% ным максимумам функции R=detC–k(traceC)2, и признаются особенностями. Параметр k обычно полагается равным 0,04...0,15 (предложено Харри% сом). Для снижения влияния шумов на найденные особенности используется сглаживание по Гауссу, но не в самом изображении, а в картах частных производных. Во многих случаях находится чересчур большое количество углов, из%за чего в дальнейшем их будет сложно отслеживать. Поэтому вводится ограниче% ние на минимальное расстояние между найденны% ми особенностями, и все лишние отбрасываются. 3.2. Угловой детектор SUSAN Название SUSAN происходит от сокращения полного английского названия алгоритма: Smallest прямоугольником на белом фоне. Круговая маска (с центром в точке, которую будем называть ядром) показана на рисунке в пяти возможных позициях. Если яркость каждого пикселя внутри маски сопо% ставима с яркостью ядра данной маски, то тогда область маски может быть определена как имею% щая одинаковую (или очень близкую) яркость с ядром. Эта часть маски называется USAN, сокра% щенно от Univalue Segment Assimilating Nucleus, и закрашена на рисунке белым цветом. Для обнаружения особенностей SUSAN ис% пользует круглую маску с центром в «подозритель% ной» точке, называемой ядром. Радиус маски обычно равен 3,4 пикселя, что дает маску из 37 то% чек. Пусть M – некоторая область маски, m– – точ% ка, принадлежащая данному региону, а m– 0 – ядро маски. Будем сравнивать яркость каждой точки ма% ски с ядром, используя следующую функцию: На основе данной функции, пройдя по всей ма% ске, получим суммирующую функцию: Эта функция обозначает число точек в области USAN. Параметр t в уравнении (10) показывает ми% нимальную границу контраста для выделения осо% бенности. n m   I m I m

  

I x x y     Известия Томского политехнического университета. 2010. Т. 316. № 5

Далее, значение функции (11) в каждой точке (ядра) сравнивается с фиксированным порогом g (геометрическим порогом). Значение этого порога рекомендуется устанавливать равным 3nmax/4, где nmax – максимальное значение функции n(m–) на изображении. Тогда SUSAN оператор вычисляется по следую% щей формуле: Значение оператора всегда положительное. Чем меньше USAN область, тем больше отклик угла. Для более стабильного результата есть смысл заменить формулу (11) на следующую: Те точки, в которых оператор SUSAN принима% ет не нулевое значение, могут быть точками осо% бенности. 3.3. Угловой детектор Хэдли и Трайкович Этот детектор особенностей состоит из точек в так называемом круге Брезенхама [10] радиуса r с центром в предполагаемой точке особенности. Если непрерывная последовательность из n точек ярче, чем некое ядро, на некоторое число t или на% оборот, темнее, то тогда точка ядра будет особенно% стью изображения. Радиус r может быть любым, однако лучше использовать значение, равное 3 (со% ответствует кругу из 16 точек окружности). Кроме того, экспериментально вычислено, что наилучшее значение n – это 9. При n меньше 9 – углы не об% наруживаются на изображении. Детектор прямо проверяет точку с окружающим ее пространством. Если c – рассматриваемая точка, p P – точка в круге P с центром вокруг c, а точка p' противопо% ложна p по линии диаметра, то функция отклика выглядит следующим образом: Точки, в которых значение функции r(с) будет больше заданного порога, определяются как по% тенциальные углы. Вычислить подлинные углы можно, использовав подавление в точках отсут% ствия максимума (non%maximum Suppression). 3.4. Развитие алгоритмов слежения Все современные алгоритмы слежения за осо% бенностями опираются на работу 1981 г. Лукаса и Канаде. В 1991 г. математическая формулировка этого алгоритма была изменена и стала основой для всех последующих обобщений с учетом аффин% ных искажений окрестности и освещенности. • Lucas%Kanade – особенность считается только смещающейся, без искажений [5]; • Tomasi%Kanade – переформулирование Lucas% Kanade. Движение считается смещением, и рас% считывается путем итеративного решения по% строенной системы линейных уравнений [6]; • Shi%Tomasi%Kanade – учитывает аффинные ис% кажения особенности [4]. 3.4.1. Алгоритм Lucas'Kanade Этот алгоритм в принципе применим для функ% ций любой размерности n. Пусть x – особенность первой функции F. Необходимо найти такую точку x+h функции G, что разность окрестностей этих то% чек по мере минимальна. p P r c I p I c I p I c

I m I m # n m R m

Управление, вычислительная техника и информатика Круговые маски

Расстояние между окрестностями записывается в виде две функции, которые можно разложить в ряд Тей% лора. Используя это приближение, ищем минимум E путем дифференцирования и приравнивания про% изводной к нулю. Смещение h можно получить как Как было указано ранее, задача слежения за особенностями без учета аффинных искажений яв% ляется поиском величины оптического потока в наборе точек. Поэтому метод Lucas%Kanade часто применяется для поиска оптического потока во всем изображении. 3.4.2. Алгоритм Tomasi'Kanade В этом алгоритме движение особых точек также описывается смещением вида: delta(x)=x+d. Как и в предыдущем алгоритме, задача заключается в поис% ке такого d, при котором минимизируется разность окон особенностей: Разложив функцию изображения в ряд Тейлора, разницу между окнами по мере можно переписать в виде Продиффе% ренцировав это выражение по d и приравняв про% изводную к нулю, получаем линейную систему от% носительно d: Cd=g, где Из этой системы получаем d как dk=C–1g. С учетом приближения функции изображения с помощью ряда Тейлора, решение получается не% точным. Для его уточнения удобно применить ите% ративную процедуру Ньютона–Рафсона. 3.4.3. Алгоритм Shi'Tomasi'Kanade В этом алгоритме учитываются аффинные ис% кажения изображения окрестности особых точек, поэтому движение пикселей окна особенности описывается в виде Ax+d, где A – матрица 22, а d – смещение. Задача слежения за особенностью сводится к проблеме определения параметров движения и ис% кажения окна особенности, при которой миними% зируется разность (=))W[J(x+d)–I(x)]3w(x)dx, где W – окно особенности, а w – весовая функция в окне, J(x) и I(x) – два изображения. Выражение дифференцируется относительно параметров движения, и производная приравнива% ется к 0. Затем система линеаризуется с помощью разложения функции изображения в ряд Тейлора. Это дает нам линейную 66 систему, которая реша% ется итеративно по методу Ньютона–Рафсона. 4. Решение задачи и результаты Предположим, что имеются два снимка какой% то сцены. Необходимо узнать, как изменился вто% рой снимок относительно первого. Были опробова% ны все описанные выше методы. Приемлемое по ка% честву решение было получено на следующем пути. Сначала будем искать опорные точки, т. е. такие точки изображения, которые можно отличить от всех соседних с ней точек изображения. Поделим изобра% жение на 9 одинаковых частей, и в каждой части бу% дем искать опорную точку. Таким образом найдем на% иболее удаленные друг от друга точки. Для поиска бу% дем использовать алгоритм Трайковича. Для второго изображения воспользуемся алгоритмом Shi%Tomasi% Kanade по причине возможного аффинного преобра% зования. Таким образом, получили в лучшем случае два набора по девять точек. Это избыточно, но дает шанс для более точных дальнейших вычислений. Есть уравнения вида: где (xi,yi)T – точка в плоскости первого изображения, являющаяся проекцией точки в пространстве (Xi,Yi,Zi)T, (ui,vi)T – это точка в плоскости второго изображения, являющаяся проекцией точки (Ui,Vi,Wi)T в простран% стве, K –1 – матрица внутренних параметров камеры, R и t – искомые матрица вращения и вектор сдвига соот% ветственно. Каждое уравнение указано в «своих» коор% динатах: первое – в глобальной системе, второе – в си% стеме камеры в первом положении, третье в системе камеры, находящейся во втором положении. С учетом того, что известны двумерные коорди% наты точки на каждом изображении и матрица вну% тренних параметров, можем считать, что и трех% мерные координаты также известны. Таким обра% зом, получаем четыре уравнения вида Распишем их более подробно: r U r V r W r U r V r W r U r V r W r U r V r W r U r V r W r U r V r W r U r V r W r U r V r W

R V R V $  I I è g I I  

I x d t G x F x     $ #  

x R F x G x

Известия Томского политехнического университета. 2010. Т. 316. № 5

Видим, что неизвестные каждой системы не за% висят от неизвестных других систем. В каждой си% стеме четыре неизвестных: три из матрицы враще% ния и одна неизвестная из вектора сдвига. Поэтому и требовалось лишь четыре особых точки. Каждая система представляет линейные уравнения. Распи% шем более подробно первую систему: где Приведя А к верхне%треугольному виду, полу% чим решение в общем виде: Время работа алгоритмов проверялось на трех изображениях, заданных заранее. Изображения комбинировались различными способами, и заме% рялось время работы приложения. Среднее время работы оказалось равным 515,5 мс. Заметим, что аналогичная задача в литературе не рассматрива% лась, поэтому непосредственно сравнить эффек% тивность нашего решения с подобной задачей не% возможно. Однако, можно попытаться позициони% ровать нашу задачу среди аналогичных. Близкие, но более сложные задачи возникают при обработке космических снимков и в других областях. Часто они имеют неприемлемо большие времена реше% ния, десятки минут. Для того, чтобы их решить за приемлемое время, применяют параллельные вы% числительные системы. С другой стороны, анало% гичные задачи встречаются в робототехнике. Тре% бования на время реакции таких систем – десятки миллисекунд. В реальных системах эти параметры достигаются, но при этом исключаются аффинные преобразования, используют только параллельный перенос, поворот и изменение масштаба. 5. Заключение В значительной мере данная разработка являет% ся экспериментальной. Тестирование алгоритмов проводилось в условиях близких у идеальным. Не были учтены некоторые условия. Полученные с камеры снимки могут отличаться резкостью, это может происходить по разным причинам: не успе% ла произойти фокусировка, или фокус сместился относительно предыдущего объекта фокусировки. В связи с этим, возникает проблема определения соответствия точечных особенностей между кадра% ми со значительно отличающейся резкостью изо% бражения. Традиционные методы, как сопоставле% ния особенностей между кадрами, так и отслежи% вания перемещения особенностей, не справляются с подобной ситуацией. Может меняться и степень освещенности изо% бражения. В этом случае также возможно исполь% зовать метод «усреднения» изображения, т. е. при% водить все полученные с камеры изображения к за% ранее определенному образцу. Один из таких мето% дов описан в [5] и [7]. Как и в любой работе с изо% бражениями, мы не застрахованы от наличия шу% мов на них, избавиться от которых можно при по% мощи специальных фильтров. Множество таких фильтров описаны в [9]. Но любое дополнительное действие над изображениями будет замедлять об% щую работу. Разработанные алгоритмы можно использовать при разработке систем управления мобильным устройством, а также при создании разнообразных игр для мобильных устройств. A r A r A r        # r U r V r W r U r V r W A r r U r V r W r U r V r W

r U r V r W r U r V r W r U r V r W r U r V r W

Управление, вычислительная техника и информатика Изображения одной и той же сцены с трех разных ракурсов

СПИСОК ЛИТЕРАТУРЫ Грузман И.С., Киричук В.С., Косых В.П., Перетягин Г.И., Спектор А.А. Цифровая обработка изображений в информа% ционных системах. – Новосибирск: Изд%во НГТУ, 2000. – 168 с. Методы компьютерной обработки изображений / под ред. В.А. Сойфера. – М.: Физматлит, 2003. – 784 с. Поступила 03.04.2010 г. Известия Томского политехнического университета. 2010. Т. 316. № 5 Семейство MPEG%форматов, состоящее из MPEG%2, MPEG%4, H.264 (AVC) и VC%1, является наиболее распространенным, в связи с чем задача разработки модификаций, направленных на повы% шение производительности алгоритмов сжатия и декодирования, остается актуальной. С увеличением разрешения и битрейта цифро% вого видеопотока (до 19201080 с битрейтом до применение алгоритмов распараллеливания для обработки цифровой видеоинформации выходит на передний план, позволяя использовать все воз% можности и преимущества многопроцессорной техники. Известно, что изображения в MPEG%последова% тельности подразделяются на следующие типы [1]: • I (intra), играющие роль опорных при восстано% влении остальных изображений по их разно% стям; • Р (predicted), содержащие разность текущего изображения с предыдущим I или predicted с учетом смещений отдельных фрагментов; • В (bidirectionally predicted), содержащие разность текущего изображения с предыдущим и после% дующим изображениями типов I или Р с учетом смещений отдельных фрагментов. Отдельные изображения состоят из макробло% ков. Макроблок – основная структурная единица фрагментации изображения, он соответствует участку изображения размером 1616 пикселей. Для них определяются векторы движения относи% тельно I% или Р%изображений. В свою очередь каж% дый макроблок состоит из нескольких блоков, ко% личество которых определяется форматом сжатия, несущих информацию о яркости Y, цветовых U% и V%компонентах. Блоки являются базовыми струк% турными единицами, над которыми осуществля% ются основные операции кодирования, в том числе выполняется дискретное косинусное преобразова% ние (DCT – Discrete Cosine Transform) и квантова% ние полученных коэффициентов [2]. Векторы дви% жения определяют расстояние между двумя фраг% ментами на экране, основываясь на количестве пикселей между этими областями. УДК 519.688 АЛГОРИТМ РАСПАРАЛЛЕЛИВАНИЯ ОБРАБОТКИ ЦИФРОВОГО ВИДЕОПОТОКА А.М. Кох Томский университет систем управления и радиоэлектроники Предложен новый алгоритм декодирования цифрового видеопотока, в котором использовано распараллеливание вычислений в сочетании с синхронизацией реконструкции опорных и предсказанных блоков видеоинформации. Алгоритм в два раза произво' дительнее существующих аналогов для видеопотоков стандартного разрешения и на треть для видеопотоков высокой четкости. Ключевые слова: Цифровое видео, параллельные алгоритмы, компенсация движения, синхронизация, MPEG, VC'1.