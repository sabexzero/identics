И.А. Ходашинский, И.В. Горбунов, П.А. Дудин. Алгоритмы муравьиной и пчелиной колонии Доклады ТУСУРа, № 2 (20), декабрь 2009

УДК 004.82 3

И.А. Ходашинский, И.В. Горбунов, П.А. Дудин

Алгоритмы муравьиной и пчелиной колонии для обучения нечетких систем

Для обучения нечетких систем предложены алгоритмы пчелиной колонии и три алгоритма муравьиной колонии: дискретный, непрерывный и прямой. Ключевые слова: нечеткие системы, метаэвристики, алгоритм пчелиной колонии, алгоритм муравьиной колонии.

Постановка задачи Пусть имеется объект исследования, заданный своей таблицей наблюдений. Проблема исследования обусловлена невозможностью построения аналитической модели изучаемого объекта, либо слишком большой сложностью такой модели, либо отсутствием достаточного опыта для построения экспертных систем, либо недостаточностью экспериментальных данных для статистического моделирования. Решением проблемы может быть переход от аналитических или статистических моделей к нечетким. Рассматривается нечеткая система типа синглтон, i-е правило в которой имеет следующий вид: где Aij – лингвистический терм, которым оценивается переменная xi; ri – действительное число, которым оценивается выход y. Нечеткая система осуществляет отображение : A i A i Ani A i A i Ani     где x – входной вектор, R – число правил; n – количество входных переменных; Aij функция принадлежности, определяемая набором своих параметров, например: треугольная – тремя параметрами, трапециевидная – четырьмя, гауссова и параболическая – двумя. Нечеткая система может быть представлена как где θ = ||θ1,…, θN|| – вектор параметров; N = n (число параметров, описывающих одну функцию принадлежности) (число термов, описывающих одну входную лингвистическую переменную, – является задаваемым параметром нечеткой системы); y – скалярный выход системы. Пусть дано множество обучающих данных {(xp; tp), p = 1,..., m}, тогда среднеквадратическая функция ошибки, которую необходимо минимизировать, будет иметь вид

Для решения проблемы минимизации предлагается использовать алгоритмы муравьиной колонии, роящихся частиц и пчелиной колонии, а также построенные на их основе гибридные алгоритмы. Алгоритмы муравьиной колонии Дискретный алгоритм. Идея алгоритма основана на способности муравьев находить кратчайший путь между источником пищи и муравейником без использования визуальной информации [1]. Способность эта обусловлена выделением феромона во время их движения и использованием этого феромона в качестве маркера. Алгоритм, предложенный в работе [1], реализует процедуру дискретной оптимизации, в то время как параметры θ меняются непрерывно. Переход от непрерывной оптимизации к дискретной осуществляется посредством построения полного ориентированного графа поиска решения, количество вершин в котором определяется точностью нахождения

 Работа выполнена при финансовой поддержке РФФИ (проект № 09-07-99008).

УПРАВЛЕНИЕ, ВЫЧИСЛИТЕЛЬНАЯ ТЕХНИКА И ИНФОРМАТИКА Доклады ТУСУРа, № 2 (20), декабрь 2009 значений параметров. Из каждой вершины выходят дуги с равномерно распределенными значениями нормированных параметров. Во все вершины графа равномерно распределяются муравьи. Цель муравья в задаче оценки параметров нечеткой системы – посетить столько вершин, сколькими параметрами задается функция принадлежности. Пометки дуг, по которым прошел муравей, будут являться найденным им решением [2]. Количество феромона, наносимого на дуги пропорционально качеству решения: чем меньше ошибка вывода нечеткой системы, выполненного на выбранных параметрах, тем больше феромона наносится на дуги. На каждой итерации происходит увеличение количества феромона на каждой дуге и его испарение. Увеличить точность вычисления параметров можно несколькими путями. Первое самое очевидное решение – это увеличение точности за счет увеличения количества вершин орграфа. Но увеличение размерности графа на порядок увеличивает время вычисления на два порядка. Для устранения этой проблемы предлагается другой способ – поэтапное увеличение точности. Сначала алгоритм работает с точностью 0,1 и находит оптимальные значения параметров функции принадлежности. Затем найденные параметры ограничиваются слева и справа значением 0,1 и в этих интервалах берутся значения с шагом 0,01 в качестве пометок нового орграфа. И так далее в зависимости от требуемой точности. Это позволяет существенно уменьшить время вычислений. Еще одним способом увеличения точности является применение градиентного алгоритма на втором этапе оптимизации после завершения работы алгоритма с заданной точностью вычисления [2]. Непрерывный алгоритм муравьиной колонии. В классическом алгоритме муравьиной колонии при выборе очередной дуги муравей руководствуется дискретным распределением вероятности. В случае непрерывного алгоритма выбор, который делает муравей, не ограничен конечным множеством, здесь дискретное распределение заменяется непрерывным, заданным своей функцией плотности [3]. В непрерывном алгоритме для описания используется функция плотности вероятности с гауссовым ядром. Под гауссовым ядром Gi(x) понимается функция, основанная на взвешенной сумме нескольких одномерных гауссовых функций gli(x): l l G x g x

Каждому i-му параметру функции принадлежности соответствует свое гауссово ядро, i = 1, ..., N, N – число настраиваемых параметров нечеткой модели. Каждая функция Gi(x) описывается тремя векторами:  – вектор весов, связанных с индивидуальными гауссовыми функциями; i – вектор математических ожиданий; i – вектор среднеквадратичных отклонений. Количество элементов всех этих векторов равно числу функций Гаусса, составляющих гауссово ядро. В непрерывном алгоритме вводится понятие архива решений. Архив решений представлен таблицей, в которой k строк. Каждая строка представляет собой найденное муравьем решение sl=|| 1 ls ||, ошибку E и вес решения l. Решения упорядочены в архиве согласно их качеству. Вес l решения sl вычисляется согласно следующей формуле: 2 2 q k qk где q – эмпирический параметр алгоритма. Параметры гауссовой функции gli(x), определяются следующим образом: ls  Введение параметра  > 0 имеет эффект, подобный норме испарения феромона в дискретном алгоритме. При добавлении нового решения в архив решений худшее решение удаляется из архива. Этот процесс аналогичен процессу испарения феромона.

И.А. Ходашинский, И.В. Горбунов, П.А. Дудин. Алгоритмы муравьиной и пчелиной колонии Доклады ТУСУРа, № 2 (20), декабрь 2009 Алгоритм Шаг 1. Задать начальные параметры. Шаг 2. Сгенерировать популяцию муравьев в колониях. Шаг 3. Для всех архивов сгенерировать несколько случайных решений с последующим оцениванием и ранжированием. Шаг 4. Найти значения вектора весов. Сделать текущим первого муравья первой колонии. Шаг 5. Для текущего муравья текущей колонии вычислить номер l, используемой функции Гаусса. Определить параметры функций Гаусса. Сгенерировать N случайных величин {x1, x2, … , xN} на основе полученных функций. Шаг 6. Найти ошибку вывода нечеткой системы при параметрах {x1, x2, …, xN}, если ошибка меньше текущей, то сохранить новые параметры. Шаг 7. Добавить в архив решений новое решение, проранжировать архив, удалить из архива худшее решение. Шаг 8. Если в текущей колонии имеется следующий муравей, то сделать его текущим и перейти к шагу 5, иначе перейти на шаг 9. Шаг 9. Если имеется следующая колония, то сделать текущим первого муравья в этой колонии и перейти на шаг 5, иначе перейти на шаг 10. Шаг 10. Если условие окончание работы алгоритма выполнено, то закончить, иначе сделать текущим первого муравья первой колонии и перейти к шагу 5. Условием окончания работы алгоритма является достижение заданного числа итераций, либо получение ошибки, меньше заданной. Прямой алгоритм муравьиной колонии. В прямом алгоритме [4] муравей отвечает за вычисление значений закрепленного за ним параметра, поэтому муравьев в алгоритме столько, сколько параметров нечеткой модели. Каждый i-й муравей создает свое решение, генерируя нормально распределенное действительное число N(μi, σi). В алгоритме используются два вида ферамонов: первый связан с центрами нормальных распределений μ = μ1, …, μN, второй – с разбросом σ = σ1, …, σN. Количество ферамона определяет значения параметров μ и σ. Для каждого параметра θj задан интервал изменения [aj, bj], где bj и aj – верхняя и нижняя граница параметра θj. В качестве начальных значений для параметров μ используются заданные случайным образом или другим способом значения параметров θ. Начальные значения параметров σ вычисляются по следующей формуле: После того как муравьи нашли решения, определяется испарение ферамона. Для текущей t-й итерации испарение определяется следующим образом: где ρ – эмпирический коэффициент испарения феромона, заданный на интервале [0, 1]. Далее происходит нанесение феромона: где θ(t) – решение, найденное муравьиной колонией на текущей итерации, оно совпадает с глобальным лучшим решением. Особенностью прямого алгоритма муравьиной колонии является включение в него простейшего локального поиска, состоящего из двух этапов: на первом этапе значение параметра θj увеличивается с определенным шагом до значения θj + dj, на втором этапе значение параметра уменьшается с определенным шагом до значения θj – dj. Значение dj определяется по формуле где rand – случайное равномерно распределенное число в интервале [0, 1]. Шаг вычисляется по следующей формуле: где K – целое число, отвечающее за вычисление значения шага. В результате локального поиска определяется новый вектор параметров θ. Значения этих параметров передаются в нечеткую систему в качестве новых значений параметров. Вычисляются ошибка и лучшее решение текущего шага. Глобальное лучшее решение запоминается.

УПРАВЛЕНИЕ, ВЫЧИСЛИТЕЛЬНАЯ ТЕХНИКА И ИНФОРМАТИКА Доклады ТУСУРа, № 2 (20), декабрь 2009 Для решения задачи оценки параметров необходима проверка изменения параметра θj на ограничения, накладываемые нечеткой системой. К таким ограничениям относятся покрытие всей области определения термов, описывающих входную переменную, и упорядоченность пиков функций принадлежности. Для преодоления локальных минимумов в алгоритме используется обновление параметров σ. С этой целью введен параметр конвергенции, вычисляемый по следующей формуле: cf Когда алгоритм приближается к локальному минимуму, коэффициент конвергенции cf приближается к 0. Как только коэффициент конвергенции становится меньше критического значения cfr, то вектор σ возвращается в начальное состояние. Условием окончания работы алгоритма может быть выполнение заданного числа итераций или достижение ошибки меньше заданной. Алгоритм пчелиной колонии Идея алгоритма взята из модели поведения пчел при поиске мест, где можно добыть как можно больше нектара. Сначала из улья вылетает в случайном направлении какое-то количество пчел-разведчиков, которые пытаются отыскать участки, где есть нектар. Через некоторое время пчелы возвращаются в улей и особым образом сообщают остальным, где и сколько они нашли нектара. После этого на найденные участки отправляются рабочие пчелы – фуражиры. Чем больше на данном участке предполагается найти нектара, тем больше фуражиров летит в этом направлении, а разведчики улетают искать другие участки, после чего процесс повторяется [5]. Алгоритм Вход: Начальное количество разведчиков S, массив фуражиров W, максимальное число итераций IterM, начальная температура T0, значение α. Выход: Оптимальные параметры антецедентов нечеткой системы. Шаг 2. Создание случайных BS векторов-решений по каждому из разведчиков, вычисление для каждого вектора ошибки решения. Шаг 3. Определение лучшего решения best в {BS  W}. Шаг 4. ЦИКЛ по j от 1 до BS ВЫПОЛНИТЬ Если exp(-|ошибка.j – ошибка.best |/ T) > rand, то включить j-е решение в массив фуражиров W. Шаг 5. Формирование новых решений NW на базе W. ЦИКЛ по j от 1 до |W| ВЫПОЛНИТЬ Шаг 6. Формирование новых решений NB на базе best. ЦИКЛ по j от 1 до |W| ВЫПОЛНИТЬ Шаг 7. Вычисление нормированной ошибки решений для всех фуражиров co.j := ошибка.j / Σiошибка.i Шаг 8. Формирование W. В него войдут решения из F, 0,01, то решение включается 4 раза, 0,1, то решение включается 2 раза, 0,3, то решение включается 1 раз/ co j  

Шаг 9. Формирование разведчиков BS:= |F| – |W|. Шаг 10. Если превышено количество итерации IterM или достигнута требуемая точность, то ВЫХОД, иначе { Iter:= Iter +1, T:= αT, переход на Шаг 2}. Эксперимент, обсуждение результатов Суть эксперимента заключалась в аппроксимации нечеткой системой следующей тестовой функции: f(x1, x2) = x1*sin(x2). Входные переменные описаны пятью нечеткими термами. База содержит 25 нечетких правил. Термы заданы треугольными ФП. Критерием аппроксимации является средняя абсолютная ошибка вывода. Алгоритмы, рассмотренные в статье, принадлежат к классу методов, основанных на популяции. К этому же классу относится и генетический алгоритм, сравним эти алгоритмы:

И.А. Ходашинский, И.В. Горбунов, П.А. Дудин. Алгоритмы муравьиной и пчелиной колонии Доклады ТУСУРа, № 2 (20), декабрь 2009 − алгоритмы работают с множеством потенциальных решений (популяцией), основываясь на принципе сотрудничества между индивидами популяции; − алгоритм на основе колоний прост в реализации и не требует больших вычислительных затрат; здесь отсутствуют специфические генетические операторы кроссовера и мутации. Время, сек

ритма муравьиной колонии выше по сравнению с остальными алгоритмами. Эффективность и скорость прямого алгоритма немного выше дискретного алгоритма муравьиной колонии и сопоставима с алгоритмом пчелиной колонии.