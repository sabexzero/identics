Вестник Башкирского университета. 2008. Т. 13. №1

ПРИБЛИЖЁННЫЕ ФОРМУЛЫ РЕШЕНИЯ ПРЯМОЙ КИНЕТИЧЕСКОЙ ЗАДАЧИ ДЛЯ ОЗОНИРОВАННОГО ОКИСЛЕНИЯ ЦИКЛОГЕКСАНА © А. В. Тропин Башкирский государственный университет Россия, Республика Башкортостан, г. Уфа, 450074, ул. Фрунзе, 32. Тел./факс: + 7 (347) 273 67 78. Эта статья является последней в цикле трёх работ автора по данной теме. В данной работе иллюстрируются другие интересные особенности использования алгоритма, описанного в первой работе «Алгоритм построения приближённых формул...». Взят более сложный механизм, обсуждаются все этапы алгоритма: численное интегрирование, упрощение исходной задачи, получение локальных решений, сращивание их в глобальные формулы. Предложена методика проверки малой зависимости относительных погрешностей формул от значений констант скоростей, учитывающая явность формул. Ключевые слова: прямая кинетическая задача, жесткость, численное решение, точное решение, приближенные формулы, правило упрощения. Рассматривается сложный цепной химический процесс [1] моль л RO RO моль л RO моль л RO моль л RO RO моль л RO RO OH OH

Пусть значения начальных концентраций имеют следующие порядки (моль/л): OH RO RO Вводятся обозначения для текущих и начальных концентраций: OH RO RO Тогда [2] изменение концентраций во времени описывает задача Коши (система обыкновенных дифференциальных уравнений (СОДУ) с начальными условиями): uy uv dt du yv uy dt dy uy uv dt dz dt dx yv uv dt dv Очевидно, что точное решение этой задачи Коши выписать невозможно. Однако можно найти для него приближенные аналитические формулы, этого исходная задача Коши сначала интегрируется численно каким-либо методом, нечувствительным к типичной жёсткости СОДУ химической кинетики. Подробности этого рассмотрены в предыдущих двух статьях, а проблема жёсткости рассматривается полно в [3]. Задаётся порог малости ε = 0.01. На основе численного решения программа выясняет, на каких интервалах времени и какие члены в СОДУ задачи Коши могут быть отброшены так, чтобы возмущение решения, вносимое этим упрощением было мало (порядка ε). В работах [4, 5] выяснено оптимальное правило упрощения СОДУ. В предшествующих данного цикла [6, 7] оно дважды строго сформулировано. По этому правилу принимает решение программа. При применении вышеупомянутого правила к значениям численного решения в узловых точках выявляется три интервала времени Коши может быть упрощена до задач, допускающих точное аналитическое интегрирование. Итак, на интервале времени [0, 10–4) исходную задачу можно упростить до dt du dt dy uv dt dz dt dx dt dv

Её решение в системе Maple легко находится и имеет следующий явный вид: На интервале времени [10–4, 1) СОДУ исходной задачи Коши сокращается до подсистемы дифференциально-алгебраических уравнений, поэтому dt du uy dt dy

раздел МАТЕМАТИКА

uy uv uv Здесь три последних уравнения – алгебраические. Программа находит корни алгебраической подсистемы, подставляет эти корни в дифференциальное уравнение и выдаёт dt du dt dy uy Далее Maple легко находит решение сокращённой задачи Коши. Окончательно на интервале времени [10–4, 1) получается следующее решение: задачи Коши можно сократить до подсистемы дифференциально-алгебраических уравнений в виде: uy dt du uy uy Здесь четыре последних уравнения составляют алгебраическую подсистему. Программа находит её положительные корни, подставляет эти корни в дифференциальное уравнение, интегрирует его и, упрощая, получает решение: Полученные выше три решения хорошо сращиваются. Для этого рассмотрим поочерёдно выражения для каждой из концентраций на трёх интервалах. Рассмотрим выражения для u(t). На интервалах времени [0, 10–4) и [10–4, 1) они неизменны u(t) = u0. Также легко заметить, что выражение для u(t) интервалов. Поэтому естественно положить, что Тогда первое слагаемое в выражении для y(t) решения на интервале [0, 10–4) и решение на интервале [10–4, 1) слагаемое в выражении для y(t) 1-го интервала можно заменить на решение на втором интервале. И такое решение останется приблизительно верным на втором интервале, потому что остальные слагаемые малы при понятным причинам некоторые u0 можно (и следует) заменить на u(t). Перемещая экспоненты в числитель дробей и упрощая, можно получить выражение для

Оценивая порядки слагаемых в этом выражении при t из различных временных интервалов, легко проверить, что на каждом из интервалов оно близко к соответствующим локальным выражениям для y(t). Рассмотрим выражения для z(t). Рассуждая

Действительно, с помощью Maple можно проверить, что на временном интервале [0, 10–4) порядок второго слагаемого значительно меньше порядполучаем в точности решение для z(t) на этом интервале. На интервале [10–4, 1) становятся малы слагаемые с экспонентами (внутри больших скобок) и остаётся только первое слагаемое, которое мало отличается от решения для z(t) на этом интервале Легко проверить, что сращивается следующим образом экспонента ничтожно мала. Аналогично получаем сращивание для v(t). Оно тоже близко к локальным решениям на соответствующих интервалах. Окончательно имеем следующие приближённые формулы для решения:

Вестник Башкирского университета. 2008. Т. 13. №1

Графики численных решений исходной системы и приближённых формул решения практически совпадают, поэтому нет смысла здесь их приводить. Поскольку все приближённые формулы для решения получились явными, то несложно визуализировать изменение их относительных погрешностей. Для этого в исходной СОДУ делается замена переменных Здесь u, y, z, x, v – компоненты неизвестного точного решения исходной задачи Коши, u(t), y(t), z(t), x(t), v(t) – полученные приближённые аналитические формулы, ∆u(t), ∆y(t), ∆z(t), ∆x(t), ∆v(t) – искомые абсолютные погрешности (от них легко перейти к относительным). После замены и упрощения получается СОДУ относительно неизвестных функций ∆u(t), ∆y(t), ∆z(t), ∆x(t), ∆v(t). Подстановкой t = 0 в приближённые формулы легко проверяется, что в нуле они имеют нулевую погрешность. Поэтому начальные условия для абсолютных погрешностей будут нулевыми: ∆u(0) = 0, Задача Коши строилась автоматически по программе в Maple. Численное решение полученной задачи, нормированное на максимальные логарифмическая, соответствует времени. По оси ординат откладываются относительные погрешности δu, δy, δz, δx, δv для каждой из приближённых формул соответственно.

погрешностей приближённых формул Из графика видно, что приближённые аналитические формулы подобраны достаточно хорошо, так как их предельные относительные погрешности не превосходят 0.03. Видно также, что формулы подобраны наименее удачно на третьем временном интервале. Понятно также, какие формулы имеют наибольшую погрешность. Исходя из этой информации, можно, например, попытаться подправить полученные приближённые формулы, как это было сделано в предыдущей работе. Для выяснения области значений коэффициентов k1, k2, k3, k4, k5, k6, k7, k8, k9, k0, при которых приближённые аналитические формулы достаточно хорошо аппроксимируют точные решения исходной системы, были проведены численные эксперименты. Так же, как в примере, описанном в предыдущей статье, вначале коэффициенты варьировались по отдельности. Варьирование производилось множителями в интервале [0.1, 10). Предельные относительные погрешности приближённых формул оценивались исходя из решения вышеописанной задачи Коши с неизвестными функциями ∆u(t), ∆y(t), ∆z(t), ∆x(t), ∆v(t). При этом искали максимумы относительных погрешностей. Интересно отметить, что использование такого подхода к поиску погрешности (в отличие от примера предыдущей статьи, где каждый раз искалось численное решение исходной задачи Коши при новых параметрах) показывает, что СОДУ относительно абсолютных погрешностей значительно менее жёсткая, по сравнению с исходной СОДУ. Из этого следует меньшая трудоёмкость численного интегрирования. Результаты этого численного эксперимента корня из суммы квадратов предельных относительных погрешностей нормированных концентраций от варьирующего множителя для каждой из констант.

погрешности формул от варьирующего множителя при варьировании констант скоростей Из рисунка видно, что предельная относительная погрешность полученных приближённых аналитических формул быстро нарастает при увеличении k6, k2 и уменьшении k0. Это может быть поводом для дальнейшего уточнения приближённых формул по тому же алгоритму. Для этого полезно сначала выяснить, на каких временах возникает большая погрешность, а потом попытаться исправить формулы, подобрав подсистему дифференциально-алгебраических уравнений с меньшим числом выброшенных членов. Возможно, гдето следует оставить члены с константами k6, k2 и k0. Пример такого подбора уже приводился во второй работе цикла, поэтому повторяться не будем.

раздел МАТЕМАТИКА

Выводы Исследование предложенного в данном цикле статей алгоритма на многих других примерах показывает его эффективность. Во всех рассмотренных других примерах всегда удавалось подбирать приближённые аналитические формулы для решения задачи Коши. Даже на первый взгляд в «безнадежных» случаях с дробными стехиометрическими коэффициентами (с наличием интервалов времени, на которых подсистемы не имеют точного аналитического решения) удавалось подобрать такие формулы. Естественно, что полученные формулы оставались достаточно точными при варьировании значений всех её параметров в достаточно широких диапазонах, несмотря на то, что само точное решение задачи Коши при этом существенно изменялось. А если при каком-то наборе значений параметров приближённые аналитические формулы становилось непригодным, то можно было их откорректировать или подобрать другие. Для этого достаточно было применить данный алгоритм заново, при новом наборе значений параметров. Предложенный алгоритм полностью реализован в виде программы в системе символьной математики Maple. В алгоритме есть шаги, с которыми Maple не всегда может справиться корректно (по причине своего несовершенства), поэтому такие шаги намеренно реализованы в программе в виде процедур, требующих вмешательства пользователя. Это, на наш взгляд, не является недостатком программы: во избежание получения неверных результатов нельзя скрывать «узкие места» алгоритма. Предложенная методика позволяет исследовать качественные характеристики химических процессов, потому что при упрощении СОДУ теряется малая часть информации. В отличии от численного решения, приближённые аналитические формулы не являются просто количественной аппроксимацией информации о химическом процессе. Поэтому, на наш взгляд, более естественно при моделировании химических процессов использовать именно их, а не численное решение. Например, это касается решения обратной кинетической задачи. Совершенно очевидно, что при этом подходе к последней резко сокращается объем оптимизационных вычислений, так как не требуется многократно решать прямую кинетическую задачу. Обратная кинетическая задача сводится к задаче нелинейной регрессии. Разумно предположить, что данный алгоритм поиска приближённых формул для решений задач Коши применим не только в химической кинетике. Потенциальными областями применения алгоритма могут быть модели со сложными нелинейными СОДУ в теории массового обслуживания. Для таких СОДУ даже программа автора (реализующая алгоритм) абсолютно не требует переделок. Основное требование к СОДУ: их правые части должны быть суммой однотипных членов. Как показывает практика автора, это могут быть не только квадратичные члены, но и члены с дробными показателями, например. Другое естественное требование – устойчивость решения задачи Коши, иначе бессмысленно искать для него приближённые формулы. Нельзя не отметить, что, как показывает практика, для задачи Коши с жёсткой нелинейной СОДУ есть во много раз больше шансов получить приближённые формулы для решения, чем для задачи с нежёсткой СОДУ. В значительной степени именно благодаря жесткости СОДУ удаётся удачно её упрощать.