Краткие сообщения

Данная модель применима как в случае отсутствия шума так максимального его значения, кроме того, позволяет получить промежуточные значения приемлемой точности в отличие от дискретных моделей. При вычислении влияния нескольких агрессоров на одну жертву необходимо учитывать их взаимосвязь между собой. Если два сигнала переключаются в одном направлении, наводимый шум может влиять только на ранний момент интервала переключения жертвы, а также если два сигнала переключаются в противоположных направлениях, то наводимый шум может влиять только на поздний момент интервала переключения жертвы, следовательно, упорядочив ранние моменты агрессоров по убыванию, а поздние по возрастанию мы сможем избежать необходимости итеративных вычислений. Таким образом, предлагаемая модель позволяет получить точные результаты оценки задержки сигнала в цепи, подвергающейся воздействию шума за время в 2- 3 раза меньшее, чем при использовании статического временного анализа [1]. БИБЛИОГРАФИЧЕСКИЙ СПИСОК 4. Зубков Е.А., Лебедев Б.К. “Об учете паразитых помех при трассировке канала”, Тезисы докладов международной конференции “Интеллектуальные САПР”, AIS'05/CAD, 2005. М.В. Рыбальченко АЛГОРИТМ КОМПОНОВКИ, УЧИТЫВАЮЩИЙ ВРЕМЕННЫЕ ПАРАМЕТРЫ НА ОСНОВЕ РАЗБИЕНИЯ "КОНУСОВ" СХЕМЫ* Основная особенность алгоритмов, использующих конусные структуры – это возможность помещать критические по времени задержки пути внутрь компонент разбиения с одновременным уменьшением числа компонент. "Конус" схемы – множество всех комбинационных элементов схемы, которые могут быть найдены между первичным выходом схемы и ведущими к нему входами [1]. Определим критический путь как наиболее длинный путь между некоторым входом и выходом в конусе исходной неразбитой схемы [2]. Если такой критический путь разрезан в процессе разбиения схемы на компоненты, то возникающие в результате этого паразитные емкости могут привести к чрезмерно большим временным задержкам и, как следствие, низкому быстродействию или неработоспособности спроектированной микросхемы. Наиболее часто данная проблема возникает при проектировании вентильных матриц, имеющих высокую насыщенность связями, поскольку большое число входов/выходов обуславливает необходимость учёта при компоновке помимо ограничений на размер компонент, также и ограничений на количество их выводов (фактически он становится основным). При этом увеличивается общее количество ком-

* Работа выполнена при поддержке программы развития научного потенциала высшей школы РНП.2.1.2.3193

Известия ТРТУ Тематический выпуск

понент разбиения, что приводит к разрезанию большого числа сигнальных цепей, среди которых имеются и критические пути. Необходимо таким образом сформировать компоненты разбиения, чтобы длительность задержки наиболее критического по времени пути была бы близкой к длительности задержки соответствующего пути в коммутационной схеме до ее разбиения. Поставим задачу таким образом сформировать компоненты разбиения, чтобы для каждой компоненты: max max IO IO Max где – задержка критического пути в исходной коммутационной схеме; max – задержка этого пути после разбиения схемы; Costp – конструктивный критерий разбиения, соответствующий удельному числу внешних связей компоненты; Sizep – размер (число элементов) компоненты разбиения; MaxSize – максимально допустимый размер компоненты разбиения; IO – число внешних связей компоненты разбиения; IO Max – максимально допустимое число внешних связей компоненты разбиения. Непосредственный учет критических по времени задержки путей может быть выполнен при использовании ориентированного графа в качестве модели коммутационной схемы. Общая структура алгоритма компоновки на основе использования конусных структур рассмотрена в [3]. Рассматриваемый алгоритм кластеризует узлы, принадлежащие накладывающимся областям конусов схемы. Эти кластеры могут содержать только один узел с высоким разветвлением на выходе, и при объединении таких кластеров возможно достижение высоких значений коэффициента Cost. Алгоритм включает следующие процедуры. 1. Определение всех конических структур исходной схемы. Также создается список CRoot всех первичных выходов, причём размер этого списка соответствует числу конусов в схеме. 2. Формирование кластеров: кластеры формируются из областей конусов, перекрывающихся между собой, а также из областей, полученных путём вырезания этих областей из конусов: просматриваются все узлы схемы из каждого узла в списке CRoot к первичным входам, при этом просмотре к каждому узлу добавляется метка, соответствующая номеру корня конуса в списке CRoot. Каждый узел имеет список меток LL: Nd Nd LL Nd LL

Краткие сообщения

где #P(Nd) – число родителей P(Nd) вершины Р из узла Nd. Если в нем не существует родитель с таким списком меток, то узел Nd добавляется к списку CRoot, так как это – корень кластера. Эти новые CRoot входы имеют размеры списков меток больше, чем 1. Новый размер списка CRoot соответствует числу кластеров в схеме; соединение в кластеры перекрывающихся конусов происходит группированием узлов с одинаковыми списками меток. Каждый кластер содержит уникальные узлы, определяемые как: LL LL Nd LL Nd LL Nd LL Nd Nd где CRoot — объединенный корень кластера Clusteri и P(Nd)i=CRoot, при условии Схемы, имеющие намного больше кластеров, чем конусов, указывают на сильное перекрытие конусов и высокое разветвление на выходе узлов. 3. Объединение кластеров в компоненты с максимизацией стоимости (2) компонент и с учётом ограничений (3) и (4) для минимизации числа компонент разбиения. 4. При условии, что никакие больше кластеры не могут быть объединены в компоненту разбиения без нарушения установленных ограничений, осуществляется переход к формированию следующей компоненты в соответствии с п. 3. Если больше никакие кластеры не могут быть объединены, алгоритм заканчивает работу, а оставшиеся кластеры выделяются в отдельные компоненты разбиения. Применимость данного алгоритма обусловлена величиной разветвления на выходах элементов схемы. При малых значениях разветвления, ограничение на число внешних выводов компонент не нарушается при помещении в них целых конусов, и может быть использован ранее рассмотренный алгоритм [3]. В противном случае указанные ограничения сразу же могут быть нарушены, что потребует применения рассмотренного выше подхода к разрезанию конусов. В дальнейшем предполагается модифицировать алгоритм для отслеживания образования вторичных критических путей и их минимизации. БИБЛИОГРАФИЧЕСКИЙ СПИСОК 3. Рыбальченко М.В., Глушань В.М. Алгоритм компоновки, учитывающий временные параметры на основе сохранения лучших конусов схемы. Известия ТРТУ. – Таганрог: Издво ТРТУ, 2002, № 3. В.А. Литвиненко, О.В. Рябов УЧЕБНО-ИССЛЕДОВАТЕЛЬСКАЯ САПР НА ОСНОВЕ САПР KIСAD* В известных промышленных САПР печатных плат ЭВА и РЭА используется ограниченный набор алгоритмов и методов решения задач конструкторского проектирования. Разработка новой системы – это длительный и трудоемкий процесс.

* Работа выполнена при поддержке РФФИ (грант №06-01-00272)