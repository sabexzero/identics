Index: ../user-service/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'java'\r\n    id 'org.springframework.boot' version '3.2.5'\r\n    id 'io.spring.dependency-management' version '1.1.4'\r\n}\r\n\r\ngroup = 'com.example'\r\nversion = '0.0.1-SNAPSHOT'\r\n\r\njava {\r\n    sourceCompatibility = '17'\r\n}\r\n\r\nconfigurations {\r\n    compileOnly {\r\n        extendsFrom annotationProcessor\r\n    }\r\n}\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    implementation 'org.springframework.boot:spring-boot-starter-web'\r\n    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.1.4'\r\n    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.5'\r\n    implementation group: 'com.fasterxml.jackson', name: 'core', version: '2.7.4'\r\n    implementation group: 'org.apache.kafka', name: 'kafka_2.13', version: '3.7.0'\r\n    implementation 'org.springframework.boot:spring-boot-starter-actuator'\r\n    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'\r\n    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '4.1.1'\r\n    compileOnly 'org.projectlombok:lombok'\r\n    annotationProcessor 'org.projectlombok:lombok'\r\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\r\n    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'\r\n}\r\n\r\ntasks.named('test') {\r\n    useJUnitPlatform()\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../user-service/build.gradle b/../user-service/build.gradle
--- a/../user-service/build.gradle	
+++ b/../user-service/build.gradle	
@@ -25,11 +25,12 @@
     implementation 'org.springframework.boot:spring-boot-starter-web'
     implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.1.4'
     implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.2.5'
-    implementation group: 'com.fasterxml.jackson', name: 'core', version: '2.7.4'
     implementation group: 'org.apache.kafka', name: 'kafka_2.13', version: '3.7.0'
     implementation 'org.springframework.boot:spring-boot-starter-actuator'
-    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
+    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.1.2'
+    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
     implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config', version: '4.1.1'
+    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.17.1'
     compileOnly 'org.projectlombok:lombok'
     annotationProcessor 'org.projectlombok:lombok'
     testImplementation 'org.springframework.boot:spring-boot-starter-test'
Index: ../user-service/src/main/java/com/example/userservice/configuration/KafkaConfiguration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.userservice.configuration;\r\n\r\nimport com.fasterxml.jackson.databind.ser.std.StringSerializer;\r\nimport org.apache.kafka.clients.admin.NewTopic;\r\nimport org.apache.kafka.clients.producer.ProducerConfig;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.kafka.core.DefaultKafkaProducerFactory;\r\nimport org.springframework.kafka.core.KafkaTemplate;\r\nimport org.springframework.kafka.core.ProducerFactory;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n@Configuration\r\npublic class KafkaConfiguration {\r\n    \r\n    @Value(\"${kafka.bootstrap-servers}\")\r\n    private String bootstrapServers;\r\n    \r\n    @Bean\r\n    public ProducerFactory<String, String> producerFactory() {\r\n        Map<String, Object> configProps = new HashMap<>();\r\n        configProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\r\n        configProps.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\r\n        configProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\r\n        return new DefaultKafkaProducerFactory<>(configProps);\r\n    }\r\n    \r\n    @Bean\r\n    public KafkaTemplate<String, String> kafkaTemplate() {\r\n        return new KafkaTemplate<>(producerFactory());\r\n    }\r\n    \r\n    @Bean\r\n    public NewTopic newTopic(){\r\n        return new NewTopic(\"testKafka\", 1, (short) 1);\r\n    }\r\n}\r\n
===================================================================
diff --git a/../user-service/src/main/java/com/example/userservice/configuration/KafkaConfiguration.java b/../user-service/src/main/java/com/example/userservice/configuration/KafkaConfiguration.java
--- a/../user-service/src/main/java/com/example/userservice/configuration/KafkaConfiguration.java	
+++ b/../user-service/src/main/java/com/example/userservice/configuration/KafkaConfiguration.java	
@@ -15,7 +15,6 @@
 
 @Configuration
 public class KafkaConfiguration {
-    
     @Value("${kafka.bootstrap-servers}")
     private String bootstrapServers;
     
