package org.identics.monolith.domain.check;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;

    @Getter
    @Entity
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder(toBuilder = true)
    @Table(name = "document_source")
    public class DocumentSource {
        @Id
        @GeneratedValue(strategy = GenerationType.IDENTITY) // Для bigint generated by default as identity
        @Column(name = "id")
        private Long id;

        // Связь с основным проверяемым документом
        @ManyToOne(fetch = FetchType.LAZY) // LAZY для производительности
        @JoinColumn(name = "check_id", nullable = false)
        private Check check; // Предполагаем, что у вас есть сущность Document

        // Связь с документом-источником из реестра
        @ManyToOne(fetch = FetchType.LAZY) // LAZY для производительности
        @JoinColumn(name = "source_uuid", referencedColumnName = "doc_uuid", nullable = false) // Указываем на PK в DocumentRegistry
        private DocumentRegistry sourceDocumentRegistry; // Поле для связи с DocumentRegistry

        @Column(name = "first_pos")
        private Integer firstPos;

        @Column(name = "second_pos")
        private Integer secondPos;
    }